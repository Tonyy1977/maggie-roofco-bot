"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "(api-node)/./lib/dbConnect.js":
/*!**************************!*\
  !*** ./lib/dbConnect.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n// lib/dbConnect.js\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error('❌ MongoDB URI is not defined in environment variables');\n}\nlet cached = global.mongoose || {\n    conn: null,\n    promise: null\n};\nasync function dbConnect() {\n    if (cached.conn) return cached.conn;\n    if (!cached.promise) {\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0__.connect(MONGODB_URI, {\n            bufferCommands: false\n        });\n    }\n    cached.conn = await cached.promise;\n    return cached.conn;\n}\nglobal.mongoose = cached;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9kYkNvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxtQkFBbUI7QUFDYTtBQUVoQyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNGLFdBQVc7QUFFM0MsSUFBSSxDQUFDQSxhQUFhO0lBQ2hCLE1BQU0sSUFBSUcsTUFBTTtBQUNsQjtBQUVBLElBQUlDLFNBQVNDLE9BQU9OLFFBQVEsSUFBSTtJQUFFTyxNQUFNO0lBQU1DLFNBQVM7QUFBSztBQUU1RCxlQUFlQztJQUNiLElBQUlKLE9BQU9FLElBQUksRUFBRSxPQUFPRixPQUFPRSxJQUFJO0lBRW5DLElBQUksQ0FBQ0YsT0FBT0csT0FBTyxFQUFFO1FBQ25CSCxPQUFPRyxPQUFPLEdBQUdSLDZDQUFnQixDQUFDQyxhQUFhO1lBQzdDVSxnQkFBZ0I7UUFDbEI7SUFDRjtJQUVBTixPQUFPRSxJQUFJLEdBQUcsTUFBTUYsT0FBT0csT0FBTztJQUNsQyxPQUFPSCxPQUFPRSxJQUFJO0FBQ3BCO0FBRUFELE9BQU9OLFFBQVEsR0FBR0s7QUFDbEIsaUVBQWVJLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxUYWJ4XFxCcmlhbl9yb29maW5nXFxjaGF0Ym90LWFwcFxcbGliXFxkYkNvbm5lY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL2RiQ29ubmVjdC5qc1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcclxuXHJcbmlmICghTU9OR09EQl9VUkkpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ+KdjCBNb25nb0RCIFVSSSBpcyBub3QgZGVmaW5lZCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXMnKTtcclxufVxyXG5cclxubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nb29zZSB8fCB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGRiQ29ubmVjdCgpIHtcclxuICBpZiAoY2FjaGVkLmNvbm4pIHJldHVybiBjYWNoZWQuY29ubjtcclxuXHJcbiAgaWYgKCFjYWNoZWQucHJvbWlzZSkge1xyXG4gICAgY2FjaGVkLnByb21pc2UgPSBtb25nb29zZS5jb25uZWN0KE1PTkdPREJfVVJJLCB7XHJcbiAgICAgIGJ1ZmZlckNvbW1hbmRzOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY2FjaGVkLmNvbm4gPSBhd2FpdCBjYWNoZWQucHJvbWlzZTtcclxuICByZXR1cm4gY2FjaGVkLmNvbm47XHJcbn1cclxuXHJcbmdsb2JhbC5tb25nb29zZSA9IGNhY2hlZDtcclxuZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0O1xyXG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiZGJDb25uZWN0IiwiY29ubmVjdCIsImJ1ZmZlckNvbW1hbmRzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./lib/dbConnect.js\n");

/***/ }),

/***/ "(api-node)/./models/messages.js":
/*!****************************!*\
  !*** ./models/messages.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n// models/messages.js\n\nconst MessageSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    sessionId: {\n        type: String,\n        required: true,\n        index: true\n    },\n    sender: {\n        type: String,\n        enum: [\n            \"user\",\n            \"bot\"\n        ],\n        required: true\n    },\n    text: {\n        type: mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.Mixed,\n        required: true\n    },\n    userType: {\n        type: String,\n        enum: [\n            \"guest\",\n            \"registered\"\n        ],\n        default: \"guest\"\n    },\n    questionMatched: {\n        type: String,\n        default: \"\"\n    },\n    topics: {\n        type: [\n            String\n        ],\n        default: []\n    }\n}, {\n    timestamps: true\n});\n// ✅ Add index for faster queries\nMessageSchema.index({\n    sessionId: 1,\n    createdAt: 1\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (mongoose__WEBPACK_IMPORTED_MODULE_0__.models.Message || mongoose__WEBPACK_IMPORTED_MODULE_0__.model(\"Message\", MessageSchema, \"messages\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL21vZGVscy9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHFCQUFxQjtBQUNXO0FBRWhDLE1BQU1DLGdCQUFnQixJQUFJRCw0Q0FBZSxDQUN2QztJQUNFRyxXQUFXO1FBQUVDLE1BQU1DO1FBQVFDLFVBQVU7UUFBTUMsT0FBTztJQUFLO0lBQ3ZEQyxRQUFRO1FBQUVKLE1BQU1DO1FBQVFJLE1BQU07WUFBQztZQUFRO1NBQU07UUFBRUgsVUFBVTtJQUFLO0lBQzlESSxNQUFNO1FBQUVOLE1BQU1KLDRDQUFlLENBQUNXLEtBQUssQ0FBQ0MsS0FBSztRQUFFTixVQUFVO0lBQUs7SUFDMURPLFVBQVU7UUFBRVQsTUFBTUM7UUFBUUksTUFBTTtZQUFDO1lBQVM7U0FBYTtRQUFFSyxTQUFTO0lBQVE7SUFDMUVDLGlCQUFpQjtRQUFFWCxNQUFNQztRQUFRUyxTQUFTO0lBQUc7SUFDN0NFLFFBQVE7UUFBRVosTUFBTTtZQUFDQztTQUFPO1FBQUVTLFNBQVMsRUFBRTtJQUFDO0FBQ3hDLEdBQ0E7SUFDRUcsWUFBWTtBQUNkO0FBR0YsaUNBQWlDO0FBQ2pDaEIsY0FBY00sS0FBSyxDQUFDO0lBQUVKLFdBQVc7SUFBR2UsV0FBVztBQUFFO0FBRWpELGlFQUFlbEIsNENBQWUsQ0FBQ29CLE9BQU8sSUFDcENwQiwyQ0FBYyxDQUFDLFdBQVdDLGVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyJDOlxcVGFieFxcQnJpYW5fcm9vZmluZ1xcY2hhdGJvdC1hcHBcXG1vZGVsc1xcbWVzc2FnZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbW9kZWxzL21lc3NhZ2VzLmpzXHJcbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuXHJcbmNvbnN0IE1lc3NhZ2VTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKFxyXG4gIHtcclxuICAgIHNlc3Npb25JZDogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCBpbmRleDogdHJ1ZSB9LFxyXG4gICAgc2VuZGVyOiB7IHR5cGU6IFN0cmluZywgZW51bTogW1widXNlclwiLCBcImJvdFwiXSwgcmVxdWlyZWQ6IHRydWUgfSxcclxuICAgIHRleHQ6IHsgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk1peGVkLCByZXF1aXJlZDogdHJ1ZSB9LFxyXG4gICAgdXNlclR5cGU6IHsgdHlwZTogU3RyaW5nLCBlbnVtOiBbXCJndWVzdFwiLCBcInJlZ2lzdGVyZWRcIl0sIGRlZmF1bHQ6IFwiZ3Vlc3RcIiB9LFxyXG4gICAgcXVlc3Rpb25NYXRjaGVkOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogXCJcIiB9LFxyXG4gICAgdG9waWNzOiB7IHR5cGU6IFtTdHJpbmddLCBkZWZhdWx0OiBbXSB9LFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdGltZXN0YW1wczogdHJ1ZSwgLy8g4pyFIEF1dG9tYXRpY2FsbHkgYWRkcyBjcmVhdGVkQXQgYW5kIHVwZGF0ZWRBdFxyXG4gIH1cclxuKTtcclxuXHJcbi8vIOKchSBBZGQgaW5kZXggZm9yIGZhc3RlciBxdWVyaWVzXHJcbk1lc3NhZ2VTY2hlbWEuaW5kZXgoeyBzZXNzaW9uSWQ6IDEsIGNyZWF0ZWRBdDogMSB9KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVscy5NZXNzYWdlIHx8XHJcbiAgbW9uZ29vc2UubW9kZWwoXCJNZXNzYWdlXCIsIE1lc3NhZ2VTY2hlbWEsIFwibWVzc2FnZXNcIik7Il0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiTWVzc2FnZVNjaGVtYSIsIlNjaGVtYSIsInNlc3Npb25JZCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsImluZGV4Iiwic2VuZGVyIiwiZW51bSIsInRleHQiLCJUeXBlcyIsIk1peGVkIiwidXNlclR5cGUiLCJkZWZhdWx0IiwicXVlc3Rpb25NYXRjaGVkIiwidG9waWNzIiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsIm1vZGVscyIsIk1lc3NhZ2UiLCJtb2RlbCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./models/messages.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\chat.js */ \"(api-node)/./pages/api/chat.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/chat\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/chat\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGY2hhdCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDY2hhdC5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUQ7QUFDQztBQUN1QztBQUNyQztBQUMxRDtBQUNrRDtBQUNzQjtBQUNGO0FBQ3RFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQywrQ0FBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsK0NBQVE7QUFDcEM7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixhQUFhLE9BQW9DLElBQUksQ0FBRTtBQUN2RCx3QkFBd0IsTUFBdUM7QUFDL0QsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLEtBQXFCLEVBQUUsRUFFMUI7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0RBQXdEO0FBQ3BFO0FBQ0E7QUFDQSx1QkFBdUIsNEVBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsNkNBQTZDLEVBQTZDO0FBQzFGLDRDQUE0QyxLQUF3QztBQUNwRixpQ0FBaUMsS0FBb0M7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLGdGQUFjO0FBQy9FLCtEQUErRCx5Q0FBeUM7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsUUFBUSxFQUFFLE1BQU07QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxrQkFBa0I7QUFDbEIsdUNBQXVDLFFBQVEsRUFBRSxRQUFRO0FBQ3pEO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLDZFQUE2RSxnRkFBYztBQUMzRixpQ0FBaUMsUUFBUSxFQUFFLFFBQVE7QUFDbkQsMEJBQTBCLHVFQUFRO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEscUVBQVM7QUFDakIsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNlbmRFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwaS11dGlsc1wiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcY2hhdC5qc1wiO1xuaW1wb3J0IHsgZ2V0VHJhY2VyLCBTcGFuS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi90cmFjZS90cmFjZXJcIjtcbmltcG9ydCB7IEJhc2VTZXJ2ZXJTcGFuIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3RyYWNlL2NvbnN0YW50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kLFxuICAgIGRpc3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9ESVNUX0RJUiB8fCAnJyxcbiAgICByZWxhdGl2ZVByb2plY3REaXI6IHByb2Nlc3MuZW52Ll9fTkVYVF9SRUxBVElWRV9QUk9KRUNUX0RJUiB8fCAnJ1xufSk7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcywgY3R4KSB7XG4gICAgbGV0IHNyY1BhZ2UgPSBcIi9hcGkvY2hhdFwiO1xuICAgIC8vIHR1cmJvcGFjayBkb2Vzbid0IG5vcm1hbGl6ZSBgL2luZGV4YCBpbiB0aGUgcGFnZSBuYW1lXG4gICAgLy8gc28gd2UgbmVlZCB0byB0byBwcm9jZXNzIGR5bmFtaWMgcm91dGVzIHByb3Blcmx5XG4gICAgLy8gVE9ETzogZml4IHR1cmJvcGFjayBwcm92aWRpbmcgZGlmZmVyaW5nIHZhbHVlIGZyb20gd2VicGFja1xuICAgIGlmIChwcm9jZXNzLmVudi5UVVJCT1BBQ0spIHtcbiAgICAgICAgc3JjUGFnZSA9IHNyY1BhZ2UucmVwbGFjZSgvXFwvaW5kZXgkLywgJycpIHx8ICcvJztcbiAgICB9XG4gICAgY29uc3QgcHJlcGFyZVJlc3VsdCA9IGF3YWl0IHJvdXRlTW9kdWxlLnByZXBhcmUocmVxLCByZXMsIHtcbiAgICAgICAgc3JjUGFnZVxuICAgIH0pO1xuICAgIGlmICghcHJlcGFyZVJlc3VsdCkge1xuICAgICAgICByZXMuc3RhdHVzQ29kZSA9IDQwMDtcbiAgICAgICAgcmVzLmVuZCgnQmFkIFJlcXVlc3QnKTtcbiAgICAgICAgY3R4LndhaXRVbnRpbCA9PSBudWxsID8gdm9pZCAwIDogY3R4LndhaXRVbnRpbC5jYWxsKGN0eCwgUHJvbWlzZS5yZXNvbHZlKCkpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHsgcXVlcnksIHBhcmFtcywgcHJlcmVuZGVyTWFuaWZlc3QsIHJvdXRlclNlcnZlckNvbnRleHQgfSA9IHByZXBhcmVSZXN1bHQ7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gcmVxLm1ldGhvZCB8fCAnR0VUJztcbiAgICAgICAgY29uc3QgdHJhY2VyID0gZ2V0VHJhY2VyKCk7XG4gICAgICAgIGNvbnN0IGFjdGl2ZVNwYW4gPSB0cmFjZXIuZ2V0QWN0aXZlU2NvcGVTcGFuKCk7XG4gICAgICAgIGNvbnN0IG9uUmVxdWVzdEVycm9yID0gcm91dGVNb2R1bGUuaW5zdHJ1bWVudGF0aW9uT25SZXF1ZXN0RXJyb3IuYmluZChyb3V0ZU1vZHVsZSk7XG4gICAgICAgIGNvbnN0IGludm9rZVJvdXRlTW9kdWxlID0gYXN5bmMgKHNwYW4pPT5yb3V0ZU1vZHVsZS5yZW5kZXIocmVxLCByZXMsIHtcbiAgICAgICAgICAgICAgICBxdWVyeToge1xuICAgICAgICAgICAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAgICAgICAgICAgLi4ucGFyYW1zXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgICAgICAgYWxsb3dlZFJldmFsaWRhdGVIZWFkZXJLZXlzOiBwcm9jZXNzLmVudi5fX05FWFRfQUxMT1dFRF9SRVZBTElEQVRFX0hFQURFUlMsXG4gICAgICAgICAgICAgICAgbXVsdGlab25lRHJhZnRNb2RlOiBCb29sZWFuKHByb2Nlc3MuZW52Ll9fTkVYVF9NVUxUSV9aT05FX0RSQUZUX01PREUpLFxuICAgICAgICAgICAgICAgIHRydXN0SG9zdEhlYWRlcjogcHJvY2Vzcy5lbnYuX19ORVhUX1RSVVNUX0hPU1RfSEVBREVSLFxuICAgICAgICAgICAgICAgIC8vIFRPRE86IGdldCB0aGlzIGZyb20gZnJvbSBydW50aW1lIGVudiBzbyBtYW5pZmVzdFxuICAgICAgICAgICAgICAgIC8vIGRvZXNuJ3QgbmVlZCB0byBsb2FkXG4gICAgICAgICAgICAgICAgcHJldmlld1Byb3BzOiBwcmVyZW5kZXJNYW5pZmVzdC5wcmV2aWV3LFxuICAgICAgICAgICAgICAgIHByb3BhZ2F0ZUVycm9yOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkZXY6IHJvdXRlTW9kdWxlLmlzRGV2LFxuICAgICAgICAgICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgICAgICAgICAgaW50ZXJuYWxSZXZhbGlkYXRlOiByb3V0ZXJTZXJ2ZXJDb250ZXh0ID09IG51bGwgPyB2b2lkIDAgOiByb3V0ZXJTZXJ2ZXJDb250ZXh0LnJldmFsaWRhdGUsXG4gICAgICAgICAgICAgICAgb25FcnJvcjogKC4uLmFyZ3MpPT5vblJlcXVlc3RFcnJvcihyZXEsIC4uLmFyZ3MpXG4gICAgICAgICAgICB9KS5maW5hbGx5KCgpPT57XG4gICAgICAgICAgICAgICAgaWYgKCFzcGFuKSByZXR1cm47XG4gICAgICAgICAgICAgICAgc3Bhbi5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgICAgICAgICAgJ2h0dHAuc3RhdHVzX2NvZGUnOiByZXMuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgJ25leHQucnNjJzogZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByb290U3BhbkF0dHJpYnV0ZXMgPSB0cmFjZXIuZ2V0Um9vdFNwYW5BdHRyaWJ1dGVzKCk7XG4gICAgICAgICAgICAgICAgLy8gV2Ugd2VyZSB1bmFibGUgdG8gZ2V0IGF0dHJpYnV0ZXMsIHByb2JhYmx5IE9URUwgaXMgbm90IGVuYWJsZWRcbiAgICAgICAgICAgICAgICBpZiAoIXJvb3RTcGFuQXR0cmlidXRlcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpICE9PSBCYXNlU2VydmVyU3Bhbi5oYW5kbGVSZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgVW5leHBlY3RlZCByb290IHNwYW4gdHlwZSAnJHtyb290U3BhbkF0dHJpYnV0ZXMuZ2V0KCduZXh0LnNwYW5fdHlwZScpfScuIFBsZWFzZSByZXBvcnQgdGhpcyBOZXh0LmpzIGlzc3VlIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qc2ApO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHJvdXRlID0gcm9vdFNwYW5BdHRyaWJ1dGVzLmdldCgnbmV4dC5yb3V0ZScpO1xuICAgICAgICAgICAgICAgIGlmIChyb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gYCR7bWV0aG9kfSAke3JvdXRlfWA7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAnbmV4dC5yb3V0ZSc6IHJvdXRlLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2h0dHAucm91dGUnOiByb3V0ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICduZXh0LnNwYW5fbmFtZSc6IG5hbWVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHNwYW4udXBkYXRlTmFtZShuYW1lKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzcGFuLnVwZGF0ZU5hbWUoYCR7bWV0aG9kfSAke3JlcS51cmx9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIC8vIFRPRE86IGFjdGl2ZVNwYW4gY29kZSBwYXRoIGlzIGZvciB3aGVuIHdyYXBwZWQgYnlcbiAgICAgICAgLy8gbmV4dC1zZXJ2ZXIgY2FuIGJlIHJlbW92ZWQgd2hlbiB0aGlzIGlzIG5vIGxvbmdlciB1c2VkXG4gICAgICAgIGlmIChhY3RpdmVTcGFuKSB7XG4gICAgICAgICAgICBhd2FpdCBpbnZva2VSb3V0ZU1vZHVsZShhY3RpdmVTcGFuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGF3YWl0IHRyYWNlci53aXRoUHJvcGFnYXRlZENvbnRleHQocmVxLmhlYWRlcnMsICgpPT50cmFjZXIudHJhY2UoQmFzZVNlcnZlclNwYW4uaGFuZGxlUmVxdWVzdCwge1xuICAgICAgICAgICAgICAgICAgICBzcGFuTmFtZTogYCR7bWV0aG9kfSAke3JlcS51cmx9YCxcbiAgICAgICAgICAgICAgICAgICAga2luZDogU3BhbktpbmQuU0VSVkVSLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC5tZXRob2QnOiBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaHR0cC50YXJnZXQnOiByZXEudXJsXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LCBpbnZva2VSb3V0ZU1vZHVsZSkpO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIC8vIHdlIHJlLXRocm93IGluIGRldiB0byBzaG93IHRoZSBlcnJvciBvdmVybGF5XG4gICAgICAgIGlmIChyb3V0ZU1vZHVsZS5pc0Rldikge1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIC8vIHRoaXMgaXMgdGVjaG5pY2FsbHkgYW4gaW52YXJpYW50IGFzIGVycm9yIGhhbmRsaW5nXG4gICAgICAgIC8vIHNob3VsZCBiZSBkb25lIGluc2lkZSBvZiBhcGktcmVzb2x2ZXIgb25FcnJvclxuICAgICAgICBzZW5kRXJyb3IocmVzLCA1MDAsICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InKTtcbiAgICB9IGZpbmFsbHl7XG4gICAgICAgIC8vIFdlIGRvbid0IGFsbG93IGFueSB3YWl0VW50aWwgd29yayBpbiBwYWdlcyBBUEkgcm91dGVzIGN1cnJlbnRseVxuICAgICAgICAvLyBzbyBpZiBjYWxsYmFjayBpcyBwcmVzZW50IHJldHVybiB3aXRoIHJlc29sdmVkIHByb21pc2Ugc2luY2Ugbm9cbiAgICAgICAgLy8gcGVuZGluZyB3b3JrXG4gICAgICAgIGN0eC53YWl0VW50aWwgPT0gbnVsbCA/IHZvaWQgMCA6IGN0eC53YWl0VW50aWwuY2FsbChjdHgsIFByb21pc2UucmVzb2x2ZSgpKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_dbConnect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/dbConnect.js */ \"(api-node)/./lib/dbConnect.js\");\n/* harmony import */ var _models_messages_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../models/messages.js */ \"(api-node)/./models/messages.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_2__]);\naxios__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/chat.js\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nasync function parseJsonBody(req) {\n    return new Promise((resolve, reject)=>{\n        let data = \"\";\n        req.on(\"data\", (chunk)=>data += chunk);\n        req.on(\"end\", ()=>{\n            try {\n                resolve(JSON.parse(data));\n            } catch  {\n                reject(new Error(\"Invalid JSON\"));\n            }\n        });\n        req.on(\"error\", reject);\n    });\n}\nasync function handler(req, res) {\n    await (0,_lib_dbConnect_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Only POST allowed\"\n        });\n    }\n    let body, sessionId;\n    try {\n        body = await parseJsonBody(req);\n        sessionId = body.sessionId || \"guest\";\n        delete body.sessionId;\n    } catch (err) {\n        console.error(\"❌ JSON parse error:\", err.message);\n        return res.status(400).json({\n            error: \"Invalid JSON\"\n        });\n    }\n    console.log(\"📨 Chat payload received:\", JSON.stringify(body));\n    if (!body.model || !Array.isArray(body.messages) || body.messages.length === 0) {\n        return res.status(400).json({\n            error: \"Payload must include a `model` string and a non-empty `messages` array\"\n        });\n    }\n    let openaiRes, data;\n    try {\n        // 1️⃣ Extract the last user message\n        const incoming = Array.isArray(body.messages) ? body.messages : [];\n        const lastUser = [\n            ...incoming\n        ].reverse().find((m)=>m.role === \"user\") || incoming[incoming.length - 1];\n        const userContent = lastUser?.content ?? \"\";\n        // 2️⃣ Classify + save user message\n        let topics = [];\n        if (userContent) {\n            try {\n                const classifyRes = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(`${process.env.BASE_URL || \"http://localhost:3000\"}/api/classify`, {\n                    text: userContent\n                });\n                const topic = classifyRes.data.topic;\n                if (topic) topics = [\n                    topic\n                ];\n            } catch (err) {\n                console.error(\"⚠️ Classification failed:\", err.message);\n            }\n            await _models_messages_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n                sessionId,\n                sender: \"user\",\n                text: userContent,\n                topics\n            });\n        }\n        // 3️⃣ Get updated history (using createdAt instead of timestamp)\n        const historyDocs = await _models_messages_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].find({\n            sessionId\n        }).sort({\n            createdAt: 1\n        }).lean();\n        const historyMessages = historyDocs.map((m)=>({\n                role: m.sender === \"user\" ? \"user\" : \"assistant\",\n                content: m.text\n            }));\n        // 4️⃣ Send conversation to OpenAI\n        openaiRes = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                model: body.model,\n                messages: historyMessages\n            })\n        });\n        data = await openaiRes.json();\n        let botMsg = data.choices?.[0]?.message?.content || \"\";\n        // 5️⃣ Normalize booking JSON if any\n        if (botMsg) {\n            try {\n                const match = botMsg.match(/\\{[^}]+\\}/);\n                if (match) {\n                    const bookingObj = JSON.parse(match[0]);\n                    const d = new Date(bookingObj.date);\n                    const currentYear = new Date().getFullYear();\n                    if (d.getFullYear() !== currentYear) {\n                        d.setFullYear(currentYear);\n                        bookingObj.date = d.toISOString().slice(0, 10);\n                        console.log(\"🔧 Normalized booking date:\", bookingObj.date);\n                    }\n                    botMsg = JSON.stringify(bookingObj);\n                }\n            } catch  {\n            // Ignore if message is not JSON\n            }\n        }\n        // 6️⃣ Save bot reply\n        if (botMsg) {\n            await _models_messages_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n                sessionId,\n                sender: \"bot\",\n                text: botMsg\n            });\n        }\n    } catch (err) {\n        console.error(\"❌ Network / fetch error:\", err);\n        return res.status(502).json({\n            error: \"Upstream request failed\",\n            details: err.message\n        });\n    }\n    if (!openaiRes.ok) {\n        console.error(\"❌ OpenAI error:\", data);\n        return res.status(openaiRes.status).json({\n            error: \"OpenAI response failed\",\n            details: data\n        });\n    }\n    // ✅ Add clean timestamp to response\n    if (data && Array.isArray(data.choices)) {\n        data.timestamp = new Date().toISOString();\n    }\n    return res.status(200).json(data);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNsQztRQUNGO1FBRUEscUJBQXFCO1FBQ3JCLElBQUlILFFBQVE7WUFDVixNQUFNL0Qsa0VBQWMsQ0FBQztnQkFDbkJ1QjtnQkFDQTZCLFFBQVE7Z0JBQ1JILE1BQU1jO1lBRVI7UUFDRjtJQUNGLEVBQUUsT0FBT3ZDLEtBQUs7UUFDWkMsUUFBUUosS0FBSyxDQUFDLDRCQUE0Qkc7UUFDMUMsT0FBT1AsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsT0FBTztZQUNQc0QsU0FBU25ELElBQUlFLE9BQU87UUFDdEI7SUFDRjtJQUVBLElBQUksQ0FBQ1EsVUFBVTBDLEVBQUUsRUFBRTtRQUNqQm5ELFFBQVFKLEtBQUssQ0FBQyxtQkFBbUJYO1FBQ2pDLE9BQU9PLElBQUlFLE1BQU0sQ0FBQ2UsVUFBVWYsTUFBTSxFQUFFQyxJQUFJLENBQUM7WUFDdkNDLE9BQU87WUFDUHNELFNBQVNqRTtRQUNYO0lBQ0Y7SUFFQSxvQ0FBb0M7SUFDcEMsSUFBSUEsUUFBUW9CLE1BQU1DLE9BQU8sQ0FBQ3JCLEtBQUtzRCxPQUFPLEdBQUc7UUFDdkN0RCxLQUFLbUUsU0FBUyxHQUFHLElBQUlULE9BQU9LLFdBQVc7SUFDekM7SUFFQSxPQUFPeEQsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ1Y7QUFDOUIiLCJzb3VyY2VzIjpbIkM6XFxUYWJ4XFxCcmlhbl9yb29maW5nXFxjaGF0Ym90LWFwcFxccGFnZXNcXGFwaVxcY2hhdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy9hcGkvY2hhdC5qc1xyXG5pbXBvcnQgZGJDb25uZWN0IGZyb20gXCIuLi8uLi9saWIvZGJDb25uZWN0LmpzXCI7XHJcbmltcG9ydCBNZXNzYWdlIGZyb20gXCIuLi8uLi9tb2RlbHMvbWVzc2FnZXMuanNcIjtcclxuaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBhcGk6IHtcclxuICAgIGJvZHlQYXJzZXI6IGZhbHNlLFxyXG4gIH0sXHJcbn07XHJcblxyXG5hc3luYyBmdW5jdGlvbiBwYXJzZUpzb25Cb2R5KHJlcSkge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBsZXQgZGF0YSA9IFwiXCI7XHJcbiAgICByZXEub24oXCJkYXRhXCIsIChjaHVuaykgPT4gKGRhdGEgKz0gY2h1bmspKTtcclxuICAgIHJlcS5vbihcImVuZFwiLCAoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgcmVzb2x2ZShKU09OLnBhcnNlKGRhdGEpKTtcclxuICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkludmFsaWQgSlNPTlwiKSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmVxLm9uKFwiZXJyb3JcIiwgcmVqZWN0KTtcclxuICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gIGF3YWl0IGRiQ29ubmVjdCgpO1xyXG5cclxuICBpZiAocmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiBcIk9ubHkgUE9TVCBhbGxvd2VkXCIgfSk7XHJcbiAgfVxyXG5cclxuICBsZXQgYm9keSwgc2Vzc2lvbklkO1xyXG4gIHRyeSB7XHJcbiAgICBib2R5ID0gYXdhaXQgcGFyc2VKc29uQm9keShyZXEpO1xyXG4gICAgc2Vzc2lvbklkID0gYm9keS5zZXNzaW9uSWQgfHwgXCJndWVzdFwiO1xyXG4gICAgZGVsZXRlIGJvZHkuc2Vzc2lvbklkO1xyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBKU09OIHBhcnNlIGVycm9yOlwiLCBlcnIubWVzc2FnZSk7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIEpTT05cIiB9KTtcclxuICB9XHJcblxyXG4gIGNvbnNvbGUubG9nKFwi8J+TqCBDaGF0IHBheWxvYWQgcmVjZWl2ZWQ6XCIsIEpTT04uc3RyaW5naWZ5KGJvZHkpKTtcclxuXHJcbiAgaWYgKCFib2R5Lm1vZGVsIHx8ICFBcnJheS5pc0FycmF5KGJvZHkubWVzc2FnZXMpIHx8IGJvZHkubWVzc2FnZXMubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICBlcnJvcjogXCJQYXlsb2FkIG11c3QgaW5jbHVkZSBhIGBtb2RlbGAgc3RyaW5nIGFuZCBhIG5vbi1lbXB0eSBgbWVzc2FnZXNgIGFycmF5XCIsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGxldCBvcGVuYWlSZXMsIGRhdGE7XHJcbiAgdHJ5IHtcclxuICAgIC8vIDHvuI/ig6MgRXh0cmFjdCB0aGUgbGFzdCB1c2VyIG1lc3NhZ2VcclxuICAgIGNvbnN0IGluY29taW5nID0gQXJyYXkuaXNBcnJheShib2R5Lm1lc3NhZ2VzKSA/IGJvZHkubWVzc2FnZXMgOiBbXTtcclxuICAgIGNvbnN0IGxhc3RVc2VyID1cclxuICAgICAgWy4uLmluY29taW5nXS5yZXZlcnNlKCkuZmluZCgobSkgPT4gbS5yb2xlID09PSBcInVzZXJcIikgfHxcclxuICAgICAgaW5jb21pbmdbaW5jb21pbmcubGVuZ3RoIC0gMV07XHJcbiAgICBjb25zdCB1c2VyQ29udGVudCA9IGxhc3RVc2VyPy5jb250ZW50ID8/IFwiXCI7XHJcblxyXG4gICAgLy8gMu+4j+KDoyBDbGFzc2lmeSArIHNhdmUgdXNlciBtZXNzYWdlXHJcbiAgICBsZXQgdG9waWNzID0gW107XHJcbiAgICBpZiAodXNlckNvbnRlbnQpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBjbGFzc2lmeVJlcyA9IGF3YWl0IGF4aW9zLnBvc3QoXHJcbiAgICAgICAgICBgJHtwcm9jZXNzLmVudi5CQVNFX1VSTCB8fCBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwifS9hcGkvY2xhc3NpZnlgLFxyXG4gICAgICAgICAgeyB0ZXh0OiB1c2VyQ29udGVudCB9XHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25zdCB0b3BpYyA9IGNsYXNzaWZ5UmVzLmRhdGEudG9waWM7XHJcbiAgICAgICAgaWYgKHRvcGljKSB0b3BpY3MgPSBbdG9waWNdO1xyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwi4pqg77iPIENsYXNzaWZpY2F0aW9uIGZhaWxlZDpcIiwgZXJyLm1lc3NhZ2UpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhd2FpdCBNZXNzYWdlLmNyZWF0ZSh7XHJcbiAgICAgICAgc2Vzc2lvbklkLFxyXG4gICAgICAgIHNlbmRlcjogXCJ1c2VyXCIsXHJcbiAgICAgICAgdGV4dDogdXNlckNvbnRlbnQsXHJcbiAgICAgICAgdG9waWNzLFxyXG4gICAgICAgIC8vIOKchSBObyBuZWVkIHRvIHNldCB0aW1lc3RhbXBzIC0gTW9uZ29vc2UgaGFuZGxlcyBpdCBhdXRvbWF0aWNhbGx5XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIDPvuI/ig6MgR2V0IHVwZGF0ZWQgaGlzdG9yeSAodXNpbmcgY3JlYXRlZEF0IGluc3RlYWQgb2YgdGltZXN0YW1wKVxyXG4gICAgY29uc3QgaGlzdG9yeURvY3MgPSBhd2FpdCBNZXNzYWdlLmZpbmQoeyBzZXNzaW9uSWQgfSlcclxuICAgICAgLnNvcnQoeyBjcmVhdGVkQXQ6IDEgfSlcclxuICAgICAgLmxlYW4oKTtcclxuXHJcbiAgICBjb25zdCBoaXN0b3J5TWVzc2FnZXMgPSBoaXN0b3J5RG9jcy5tYXAoKG0pID0+ICh7XHJcbiAgICAgIHJvbGU6IG0uc2VuZGVyID09PSBcInVzZXJcIiA/IFwidXNlclwiIDogXCJhc3Npc3RhbnRcIixcclxuICAgICAgY29udGVudDogbS50ZXh0LFxyXG4gICAgfSkpO1xyXG5cclxuICAgIC8vIDTvuI/ig6MgU2VuZCBjb252ZXJzYXRpb24gdG8gT3BlbkFJXHJcbiAgICBvcGVuYWlSZXMgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLm9wZW5haS5jb20vdjEvY2hhdC9jb21wbGV0aW9uc1wiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVl9YCxcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG1vZGVsOiBib2R5Lm1vZGVsLFxyXG4gICAgICAgIG1lc3NhZ2VzOiBoaXN0b3J5TWVzc2FnZXMsXHJcbiAgICAgIH0pLFxyXG4gICAgfSk7XHJcblxyXG4gICAgZGF0YSA9IGF3YWl0IG9wZW5haVJlcy5qc29uKCk7XHJcbiAgICBsZXQgYm90TXNnID0gZGF0YS5jaG9pY2VzPy5bMF0/Lm1lc3NhZ2U/LmNvbnRlbnQgfHwgXCJcIjtcclxuXHJcbiAgICAvLyA177iP4oOjIE5vcm1hbGl6ZSBib29raW5nIEpTT04gaWYgYW55XHJcbiAgICBpZiAoYm90TXNnKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBib3RNc2cubWF0Y2goL1xce1tefV0rXFx9Lyk7XHJcbiAgICAgICAgaWYgKG1hdGNoKSB7XHJcbiAgICAgICAgICBjb25zdCBib29raW5nT2JqID0gSlNPTi5wYXJzZShtYXRjaFswXSk7XHJcbiAgICAgICAgICBjb25zdCBkID0gbmV3IERhdGUoYm9va2luZ09iai5kYXRlKTtcclxuICAgICAgICAgIGNvbnN0IGN1cnJlbnRZZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xyXG4gICAgICAgICAgaWYgKGQuZ2V0RnVsbFllYXIoKSAhPT0gY3VycmVudFllYXIpIHtcclxuICAgICAgICAgICAgZC5zZXRGdWxsWWVhcihjdXJyZW50WWVhcik7XHJcbiAgICAgICAgICAgIGJvb2tpbmdPYmouZGF0ZSA9IGQudG9JU09TdHJpbmcoKS5zbGljZSgwLCAxMCk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi8J+UpyBOb3JtYWxpemVkIGJvb2tpbmcgZGF0ZTpcIiwgYm9va2luZ09iai5kYXRlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGJvdE1zZyA9IEpTT04uc3RyaW5naWZ5KGJvb2tpbmdPYmopO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCB7XHJcbiAgICAgICAgLy8gSWdub3JlIGlmIG1lc3NhZ2UgaXMgbm90IEpTT05cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIDbvuI/ig6MgU2F2ZSBib3QgcmVwbHlcclxuICAgIGlmIChib3RNc2cpIHtcclxuICAgICAgYXdhaXQgTWVzc2FnZS5jcmVhdGUoe1xyXG4gICAgICAgIHNlc3Npb25JZCxcclxuICAgICAgICBzZW5kZXI6IFwiYm90XCIsXHJcbiAgICAgICAgdGV4dDogYm90TXNnLFxyXG4gICAgICAgIC8vIOKchSBNb25nb29zZSB0aW1lc3RhbXBzIGhhbmRsZSBjcmVhdGVkQXQvdXBkYXRlZEF0XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgY29uc29sZS5lcnJvcihcIuKdjCBOZXR3b3JrIC8gZmV0Y2ggZXJyb3I6XCIsIGVycik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDIpLmpzb24oe1xyXG4gICAgICBlcnJvcjogXCJVcHN0cmVhbSByZXF1ZXN0IGZhaWxlZFwiLFxyXG4gICAgICBkZXRhaWxzOiBlcnIubWVzc2FnZSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFvcGVuYWlSZXMub2spIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCLinYwgT3BlbkFJIGVycm9yOlwiLCBkYXRhKTtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKG9wZW5haVJlcy5zdGF0dXMpLmpzb24oe1xyXG4gICAgICBlcnJvcjogXCJPcGVuQUkgcmVzcG9uc2UgZmFpbGVkXCIsXHJcbiAgICAgIGRldGFpbHM6IGRhdGEsXHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8vIOKchSBBZGQgY2xlYW4gdGltZXN0YW1wIHRvIHJlc3BvbnNlXHJcbiAgaWYgKGRhdGEgJiYgQXJyYXkuaXNBcnJheShkYXRhLmNob2ljZXMpKSB7XHJcbiAgICBkYXRhLnRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICB9XHJcblxyXG4gIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxufSJdLCJuYW1lcyI6WyJkYkNvbm5lY3QiLCJNZXNzYWdlIiwiYXhpb3MiLCJjb25maWciLCJhcGkiLCJib2R5UGFyc2VyIiwicGFyc2VKc29uQm9keSIsInJlcSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZGF0YSIsIm9uIiwiY2h1bmsiLCJKU09OIiwicGFyc2UiLCJFcnJvciIsImhhbmRsZXIiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJib2R5Iiwic2Vzc2lvbklkIiwiZXJyIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJsb2ciLCJzdHJpbmdpZnkiLCJtb2RlbCIsIkFycmF5IiwiaXNBcnJheSIsIm1lc3NhZ2VzIiwibGVuZ3RoIiwib3BlbmFpUmVzIiwiaW5jb21pbmciLCJsYXN0VXNlciIsInJldmVyc2UiLCJmaW5kIiwibSIsInJvbGUiLCJ1c2VyQ29udGVudCIsImNvbnRlbnQiLCJ0b3BpY3MiLCJjbGFzc2lmeVJlcyIsInBvc3QiLCJwcm9jZXNzIiwiZW52IiwiQkFTRV9VUkwiLCJ0ZXh0IiwidG9waWMiLCJjcmVhdGUiLCJzZW5kZXIiLCJoaXN0b3J5RG9jcyIsInNvcnQiLCJjcmVhdGVkQXQiLCJsZWFuIiwiaGlzdG9yeU1lc3NhZ2VzIiwibWFwIiwiZmV0Y2giLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsIk9QRU5BSV9BUElfS0VZIiwiYm90TXNnIiwiY2hvaWNlcyIsIm1hdGNoIiwiYm9va2luZ09iaiIsImQiLCJEYXRlIiwiZGF0ZSIsImN1cnJlbnRZZWFyIiwiZ2V0RnVsbFllYXIiLCJzZXRGdWxsWWVhciIsInRvSVNPU3RyaW5nIiwic2xpY2UiLCJkZXRhaWxzIiwib2siLCJ0aW1lc3RhbXAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/chat.js\n");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();